name: Docker Build and Push

on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        database: [ oracle,mssql,dm,postgresql,kingbase, polardb ]
        java: [ 8 ]
    steps:
      - name: Get version
        id: get_version
        run: echo ::set-output name=NACOS_VERSION::${GITHUB_REF/refs\/tags\/v/}
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '${{ matrix.java }}'
      - name: "Cache Maven Repos"
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Maven install
        run: mvn clean install -DskipTests

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: build/datasource/datasource-plugin-ext.Dockerfile
          push: true
          tags: fuhouyu/nacos-server:${{ steps.get_version.outputs.NACOS_VERSION }}-${{ matrix.database }}
          labels: "Nacos ${{ steps.get_version.outputs.NACOS_VERSION }} Datasource ${{ matrix.database }}"
          build-args: |
            DATASOURCE_PLUGIN=nacos-${{ matrix.database }}-datasource-plugin-ext 
            NACOS_VERSION=${{ steps.get_version.outputs.NACOS_VERSION }}
      # 构建Nacos tar包
      - name: Build Release
        run: |
          wget https://github.com/alibaba/nacos/releases/download/${{ steps.get_version.outputs.NACOS_VERSION }}/nacos-server-${{ steps.get_version.outputs.NACOS_VERSION }}.tar.gz -O nacos-server-${{ matrix.database }}.tar.gz
          mkdir nacos-server-${{ matrix.database }}
          tar -xvf nacos-server-${{ matrix.database }}.tar.gz --strip-components=1 -C ./nacos-server-${{ matrix.database }}/ && rm -rf *.tar.gz
          cd nacos-server-${{ matrix.database }}
          mkdir -p logs && touch logs/start.out
          mkdir -p plugins
          cp ../build/datasource/conf/application.properties conf/application.properties
          cp ../build/datasource/bin/docker-startup.sh bin/docker-startup.sh
          cp ../nacos-datasource-plugin-ext/nacos-${{ matrix.database }}-datasource-plugin-ext/target/nacos-${{ matrix.database }}-datasource-plugin-ext*.jar nacos-${{ matrix.database }}-datasource-plugin-ext*.jar
          tar -cvzf ../nacos-server-${{ matrix.database }}.tar.gz ./
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: Nacos Datasource Plugin v${{ steps.get_version.outputs.NACOS_VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
          files: |
            nacos-server-${{ matrix.database }}.tar.gz
            nacos-datasource-plugin-ext/nacos-${{ matrix.database }}-datasource-plugin-ext/target/nacos-${{ matrix.database }}-datasource-plugin-ext*.jar